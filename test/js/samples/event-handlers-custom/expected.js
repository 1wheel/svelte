/* generated by Svelte vX.Y.Z */
import { Component, assign, createElement, detachNode, insertNode, noop } from "svelte/shared.js";

function foo( node, callback ) {
	// code goes here
};

function create_main_fragment(component, state) {
	var button, foo_handler;

	return {
		c: function create() {
			button = createElement("button");
			button.textContent = "foo";
			this.h();
		},

		h: function hydrate() {
			foo_handler = foo.call(component, button, function(event) {
				var state = component.get();
				component.foo( state.bar );
			});
		},

		m: function mount(target, anchor) {
			insertNode(button, target, anchor);
		},

		p: noop,

		u: function unmount() {
			detachNode(button);
		},

		d: function destroy() {
			foo_handler.destroy();
		}
	};
}

class SvelteComponent extends Component {
	constructor(options) {
		super(options);
		this._state = assign({}, options.data);

		this._fragment = create_main_fragment(this, this._state);

		if (options.target) {
			this._fragment.c();
			this._mount(options.target, options.anchor);
		}
	}

	foo( bar ) {
		console.log( bar );
	}
}
export default SvelteComponent;