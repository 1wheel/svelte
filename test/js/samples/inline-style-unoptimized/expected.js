/* generated by Svelte vX.Y.Z */
import { Component, assign, createElement, createText, detachNode, insertNode, noop } from "svelte/shared.js";

function create_main_fragment(component, state) {
	var div, text, div_1, div_1_style_value;

	return {
		c: function create() {
			div = createElement("div");
			text = createText("\n");
			div_1 = createElement("div");
			this.h();
		},

		h: function hydrate() {
			div.style.cssText = state.style;
			div_1.style.cssText = div_1_style_value = "" + state.key + ": " + state.value;
		},

		m: function mount(target, anchor) {
			insertNode(div, target, anchor);
			insertNode(text, target, anchor);
			insertNode(div_1, target, anchor);
		},

		p: function update(changed, state) {
			if (changed.style) {
				div.style.cssText = state.style;
			}

			if ((changed.key || changed.value) && div_1_style_value !== (div_1_style_value = "" + state.key + ": " + state.value)) {
				div_1.style.cssText = div_1_style_value;
			}
		},

		u: function unmount() {
			detachNode(div);
			detachNode(text);
			detachNode(div_1);
		},

		d: noop
	};
}

class SvelteComponent extends Component {
	constructor(options) {
		super(options);
		this._state = assign({}, options.data);

		this._fragment = create_main_fragment(this, this._state);

		if (options.target) {
			this._fragment.c();
			this._mount(options.target, options.anchor);
		}
	}
}
export default SvelteComponent;